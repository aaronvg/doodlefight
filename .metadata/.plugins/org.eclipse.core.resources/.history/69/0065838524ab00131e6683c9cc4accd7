package entities;

import java.util.ArrayList;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.math.Vector3;

/**
 * This class controls all input to the game. It also converts drawings to box2D
 * objects and manages drawn paths.
 * 
 * @author Aaron
 * 
 */
public class DrawingManager {
	ArrayList<Vector2> currPoints;
	ArrayList<Line> paths;
	ShapeRenderer shaper;
	boolean newPath;

	public DrawingManager() {
		newPath = true;
		currPoints = new ArrayList<Vector2>();
		paths = new ArrayList<Line>();
	}

	public void update(GameCamera cam, SpriteBatch batch) {
		if (Gdx.input.isTouched()) {
			// Start drawing path.
			Vector3 point = new Vector3(Gdx.input.getX(), Gdx.input.getY(), 0);
			cam.unproject(point);
			currPoints.add(new Vector2(point.x, point.y));
		} else {
			// if we were drawing a path, save it now into our buffer.
			Line l = new Line(new ArrayList<Vector2>(currPoints));
			paths.add(l);
			currPoints.clear();
		}

		

		for (int i = 0; i < paths.size(); i++) {
			shaper.begin(ShapeType.Line);
			ArrayList<Vector2> points = paths.get(i).points;
			for(int j = 0; j < points.size(); j++) {
				shaper.line(points.get(i), points.get(i+1));
				
			}
			shaper.end();
			
		}

	}

	private class Line {
		public ArrayList<Vector2> points;

		public Line(ArrayList<Vector2> points) {
			this.points = points;

		}
		
		public int size() {
			return points.size();
		}
	}

}
